!% -C2

! Na drug± stronê lustra
! An Inform tutorial by Gareth Rees
! All rights given away
! Version 3

Constant Story "NA DRUG¡ STRONÊ LUSTRA";
Constant Headline "^Interaktywny samouczek^Opracowanie: Gareth Rees, Bartosz Zaj±czkowski.^";
Constant DEBUG;

Serial "141115";
Release 1;


! Dopuszczalne warto¶ci parametru definiuj±cego 'stan' w jakim w danej chwili znajduje siê
! dany kotek:

Constant HELD_STATE = 0;     ! Jest trzymany przez Alicjê
Constant QUEEN_STATE = 1;    ! Bawi siê czerwon± królow±
Constant WOOL_STATE = 2;     ! Bawi siê k³êbkiem w³óczki
Constant CHAIR_STATE = 3;    ! Stoi na drodze fotela




Include "Parser";
Include "Verblib";
Include "Grammar";



[ Initialise;
    location = Drawing_Room;
    StartDaemon(white_kitten);
    StartDaemon(black_kitten);
    print "^^^^^Na zewn±trz panuje sroga zima, ale w domu po drugiej stronie lustra
        jest ¶rodek lata. Musisz tylko znale¼æ sposób jak przedostaæ siê na drug± stronê...^^";
];



[ Inside x y;
    do {
        x = parent(x);
    } until (x == 0 or y);
    if (x == 0) rfalse;
];

[ UntangleSub; "Naprawdê uwa¿asz, ¿e to dobry pomys³?"; ];

[ ReflectSub;
    if (second ~= mirror) "Có¿ za dziwny pomys³!";
    if (noun == hearth or mirror || (player notin mantelpiece &&
        player notin armchair))
        "Z miejsca w którym stoisz w ¿aden sposób nie uda ci siê zobaczyæ odbicia ", (dop) noun ,".";
    print "Lustrzane odbicie ";
    if (noun == player) print "Alicji";
    else print (dop) noun;
    print " wygl±da";
    if (player in mantelpiece) " mgli¶cie i niewyra¼nie.";
    print " tak samo jak ";
    if (noun == player) print "prawdziwa Alicja";
    else print (name) noun;
    " tylko na odwrót, lewa strona zamieniona z praw±.";
];

Extend 'spójrz'
    * "na" bierniknoun "w" miejscowniknoun       -> Reflect;

Extend 'obejrzyj'
    * bierniknoun "w" miejscowniknoun            -> Reflect;

Extend 'id¼'
    * 'przez' bierniknoun                        -> Enter;

Verb 'rozpl±cz' "nawiñ" "zwiñ"
    * bierniknoun -> Untangle;

Verb 'pog³aszcz' = 'potrzyj';



Object Drawing_Room "Salon"
 has    light

 with   name     '¶nieg',
        name_dop '¶niegu',
        name_cel '¶niegowi',
        name_bie '¶nieg',
        name_nar '¶niegiem',
        name_mie '¶niegu',

        description
            "Delikatne uderzenia p³atków ¶niegu o szybê przypominaj±, ¿e na dworze jest
            bardzo zimno. Tym bardziej cieszysz siê przebywaj±c w tym przytulnym pokoju,
            z kominkiem od którego bije przyjemne ciep³o, miêkkim dywanem
            oraz wygodnym fotelem, na którym a¿ chcia³oby siê skuliæ i zasn±æ.
            Ca³y pokój odbija siê w wielkim zwierciadle zawieszonym nad szerok±
            pó³k± ponad kominkiem.",

        before [;
            if (player notin Mantelpiece) rfalse;
            Exit,Go:
                if (noun == d_obj or out_obj)
                    "Jeste¶ za wysoko! To nie jest najlepszy sposób zej¶cia.";
            Examine,Enter,ThrowAt,ThrownAt,Reflect: ;
            default:
                if (inp1 ~= 1 && noun ~= 0 && Inside(noun,mantelpiece) == 0)
                    "Nie dosiêgniesz ", (dop) noun, " z tego miejsca.";
                if (inp2 ~= 1 && second ~= 0 && Inside(second,mantelpiece) == 0)
                    "Nie dosiêgniesz  ", (dop) second, " z tego miejsca.";
        ];

Object  red_queen "czerwona królowa"
 has    female

 with   name     'czerwona' 'krolowa',
        name_dop 'czerwonej' 'krolowej',
        name_cel 'czerwonej' 'krolowej',
        name_bie 'czerwona' 'krolowa',
        name_nar 'czerwona' 'krolowa',
        name_mie 'czerwonej' 'krolowej',

        desc_dop "czerwonej królowej",
        desc_cel "czerwonej królowej",
        desc_bie "czerwon± królow±",
        desc_nar "czerwon± królow±",
        desc_mie "czerwonej królowej",

        describe [;
            if (white_kitten.state == QUEEN_STATE
                || black_kitten.state == QUEEN_STATE)
                rtrue;
        ],

        description "Niedu¿a, acz gro¼na figura szachowa.",

        after [;
            Take:
                if (white_kitten.state == QUEEN_STATE)
                    white_kitten.state = CHAIR_STATE;
                if (black_kitten.state == QUEEN_STATE)
                    black_kitten.state = CHAIR_STATE;
            PutOn,Transfer,Insert:
                if (second == chess_board)
                    "Niepodzielna w³adczyni ca³ej szachownicy.";
        ];

Object  chess_board "szachownica" Drawing_Room
 has    supporter female

 with   name     'szachy' 'plansza' 'szachownica',
        name_dop 'szachow' 'planszy' 'szachownicy',
        name_cel 'szachom' 'planszy' 'szachownicy',
        name_bie 'szachy' 'plansze' 'szachownice',
        name_nar 'szachami' 'plansza' 'szachownica',
        name_mie 'szachach' 'planszy' 'szachownicy',

        desc_dop "szachownicy",
        desc_cel "szachownicy",
        desc_bie "szachownicê",
        desc_nar "szachownic±",
        desc_mie "szachownicy",

        initial "Na pod³odze le¿y porzucona szachownica.",

        description "Szachownica zosta³a tu po niedawno zakoñczonej grze. Niestety, wszystkie
            figury siê pogubi³y. Kociaki chcia³y siê nimi trochê pobawiæ.";


Object  hearth "kominek" Drawing_Room
 has    scenery

 with   name     'kominek' 'ogien' 'plomien' 'plomienie',
        name_dop 'kominka' 'ognia' 'plomienia' 'plomieni',
        name_cel 'kominkowi' 'ogniowi' 'plomieniowi' 'plomieniom',
        name_bie 'kominek' 'ogien' 'plomien' 'plomienie',
        name_nar 'kominkiem' 'ogniem' 'plomieniem' 'plomieniami',
        name_mie 'kominku' 'ogniu' 'plomieniu' 'plomieniach',

        desc_dop "kominka",
        desc_cel "kominkowi",
        desc_bie "kominek",
        desc_nar "kominkiem",
        desc_mie "kominku",

        description "Przygl±daj±c siê p³omieniom zastanawiasz siê czy
            po drugiej stronie lustra te¿ p³onie ogieñ. W zwierciadle
            tego nie widaæ, ale gdy z kominka wydostanie siê przypadkiem
            k³±b dymu, to w domu po drugiej stronie lustra te¿ widaæ
            dym. Chyba, ¿e to dla niepoznaki. Tak aby zdawa³o siê,
            ¿e tam te¿ rozpalono ogieñ.";


Object  rug "dywan" Drawing_Room
 has    concealed static supporter enterable
        ! z ustawionym atrybutem general gdy Alicja znajdzie ju¿ pod nim figurê królowej

 with   name     'dywan' 'dywanik' 'indyjski' 'arabski' 'miêkki' 'wspania³y',
        name_dop 'dywanu' 'dywanika' 'indyjskiego' 'arabskiego' 'miêkkiego' 'wspania³ego',
        name_cel 'dywanowi' 'dywanikowi' 'indyjskiemu' 'arabskiemu' 'miêkkiemu' 'wspania³emu',
        name_bie 'dywan' 'dywanik' 'indyjski' 'arabski' 'miêkki' 'wspania³y',
        name_nar 'dywanem' 'dywanikiem' 'indyjskim' 'arabskim' 'miêkkim' 'wspania³ym',
        name_mie 'dywanie' 'dywaniku' 'indyjskim' 'arabskim' 'miêkkim' 'wspania³ym',

        desc_dop "dywanu",
        desc_cel "dywanowi",
        desc_bie "dywan",
        desc_nar "dywanem",
        desc_mie "dywanie",

        description "Wspania³y miêkki dywan przywieziony z jakiego¶ odleg³ego
            kraju. Z Indii, a mo¿e z Arabii, gdziekolwiek by to nie by³o.",

        before [;
            Take: "Jest za ciê¿ki i o wiele za du¿y, aby mog³a go unie¶æ ma³a dziewczynka.
                Mo¿esz co najwy¿ej pod niego zajrzeæ.";
            Push,Pull:
                "Miejsce dywanu jest przy kominku.";
            LookUnder:
                if (player in mantelpiece || player in armchair)
                    "Nie dosiêgniesz dywanu z miejsca, w którym siê znajdujesz.";
                if (player in self)
                    "Próbujesz podnie¶æ róg dywanu, ale ci siê to nie udaje. Dopiero po chwili
                    orientujesz siê, ¿e to dlatego, ¿e na nim stoisz! No co¶ takiego!";
                if (self hasnt general) {
                    give self general;
                    move red_queen to player;
                    "Zagl±dasz pod dywan unosz±c naro¿nik i odkrywasz zagubion± figurê szachow±. Bierzesz czerwon± królow±.";
                }
        ];

Object  armchair "fotel" Drawing_Room
 has    static concealed supporter enterable
        ! z ustawionym atrybutem general je¶li zosta³ przysuniety do kominka


 with   name 'fotel',
        name_dop 'fotela',
        name_cel 'fotelowi',
        name_bie 'fotel',
        name_nar 'fotelem',
        name_mie 'fotelu',

        desc_dop "fotela",
        desc_cel "fotelowi",
        desc_bie "fotel",
        desc_nar "fotelem",
        desc_mie "fotelu",

        description [;
            print "Wielki fotel. Wymarzone miejsce na drzemkê dla kotka lub ma³ej
                dziewczynki. Stoi przy ";
            if (self has general) "kominku.";
            "oknie.";
        ],

        before [ i;
            Push,Pull:
                if (player notin Drawing_Room)
                    "Najpierw musisz zej¶æ z ", (dop) parent(player), ".";
                if (white_kitten in player || black_kitten in player)
                    "Z kociakiem w rêkach nie dasz rady!";
                if (white_kitten.state == CHAIR_STATE) i = white_kitten;
                else if (black_kitten.state == CHAIR_STATE) i = black_kitten;
                if (i ~= 0)
                    "Ju¿ ju¿ mia³a¶ przesuwaæ fotel kiedy zauwa¿y³a¶, ¿e
                    na jego drodze znajduje siê ", (name) i, ". Ca³e szczê¶cie,
                    bo mog³aby¶ niechc±cy skrzywdziæ to niewinne zwierz±tko.";
                if (self has general) {
                    give self ~general;
                    "Odsuwasz fotel dalej od kominka.";
                }
                give self general;
                "Przysuwasz fotel bli¿ej kominka.";
            Climb,Enter:
                move player to armchair;
                "Wdrapujesz siê na wygodny ciep³y fotel.";
            Take: "Fotel jest tak ciê¿ki, ¿e nie jeste¶ w stanie go podnie¶æ.";
        ];

Object  mantelpiece "pó³ka nad kominkiem" Drawing_Room
 has    concealed supporter enterable female

 with   name 'polka' 'nad' 'kominkiem' 'gzyms',
        name_dop 'polki' 'nad' 'kominkiem' 'gzymsu',
        name_cel'polce' 'nad' 'kominkiem' 'gzymsie',
        name_bie 'polke' 'nad' 'kominkiem' 'gzyms',
        name_nar 'polka' 'nad' 'kominkiem' 'gzymsem',
        name_mie 'polce' 'nad' 'kominkiem' 'gzymsie',

        desc_dop "pó³ki nad kominkiem",
        desc_cel "pó³ce nad kominkiem",
        desc_bie "pó³kê nad kominkiem",
        desc_nar "pó³k± nad kominkiem",
        desc_mie "pó³ce nad kominkiem",

        description "Jest zawieszona wysoko nad pod³og±. Wygl±da na wystarczaj±co
            szerok± i solidn±, aby utrzymaæ ciê¿ar ma³ej dziewczynki.",

        before [;
            Enter,Climb:
                if (player notin armchair)
                    "Pó³ka nad kominkiem znajduje siê o wiele za wysoko aby ma³a dziewczynka mog³a siê na ni± po prostu wdrapaæ.";
                if (armchair hasnt general)
                    "Fotel stoi za daleko! St±d nie uda ci siê dosiêgn±æ pó³ki.";
                if (children(player) > 0)
                    "Do tego musisz mieæ wolne rêce.";
                move player to mantelpiece;
                "Z odrobin± wysi³ku, zdrêcznie wdrapujesz siê na pó³kê nad kominkiem.";
            PutOn,LetGo:
                if (player notin self && (player notin armchair || armchair hasnt general))
                    "Pó³ka jest o wiele za wysoko, aby¶ mog³a j± st±d dosiêgn±æ.";
        ];

Object  mirror "lustro" Drawing_Room
 has    static concealed

 with   name 'lustro' 'zwierciadlo',
        name_dop 'lustra' 'zwierciadla',
        name_cel'lustru' 'zwierciadlu',
        name_bie 'lustro' 'zwierciadlo',
        name_nar 'lustrem' 'zwierciadlem',
        name_mie 'lustrze' 'zwierciadle',

        desc_dop "lustra",
        desc_cel "lustru",
        desc_bie "lustro",
        desc_nar "lustrem",
        desc_mie "lustrze",

        description [;
            if (player in mantelpiece)
                "Tafla lustra zdaje siê rozp³ywaæ, niczym b³yszcz±ca srebrna mgie³ka.";
            if (player in armchair)
                "W zwierciadle widzisz salon domu po drugiej stronie lustra.
                W gruncie rzeczy wygl±da tak samo jak ten w którym jeste¶,
                ale wszystko jest w nim odwrócone z lewej na prawo. Masz jednak
                pewno¶æ, ¿e poza tym niewielkim fragmentem który widzisz, ¶wiat po drugiej stronie lustra
                jest zupe³nie inny ni¿ Twój w³asny.";
            "W zwierciadle widzisz sufit salonu po drugiej stronie lustra. Wygl±da
            w zasadzie tak samo jak sufit Twojego salonu.";
        ],

        before [;
            if (action ~= ##Examine or ##ThrownAt or ##Reflect && player notin mantelpiece) "Nie jeste¶ w stanie dosiêgn±æ lustra z miejsca, w którym siê znajdujesz.";
            Touch,Pull,Push:
                "Twoja d³oñ bez oporu zanurza siê w srebrzystej mgie³ce!";
            ThrownAt: "Chyba nie chcesz mieæ przed sob± siedmiu lat pecha i nieszczê¶cia?";
            Enter:
                ! I tak Alicja wchodzi do domu po drugiej stronie lustra...
                deadflag = 2;
                "Twoja d³oñ bez oporu zanurza siê w srebrzystej mgie³ce, chwilê pó¼niej
                ca³a rêka, a za ni± reszta Twojego cia³a... Przechodzisz na drug±
                stronê lustra...";
        ];

Object  worsted "k³êbek w³óczki" Drawing_Room
        ! posiada atrybut 'general' je¶li k³êbek zosta³ sko³tuniony przez kociaki

 with   name     'k³êbek' 'w³óczki' 'w³óczka' 'we³ny' 'b³êkitny' 'b³êkitnej' 'ko³tun',
        name_dop 'k³êbka' 'w³óczki' 'we³ny' 'b³êkitnego' 'b³êkitnej' 'ko³tuna',
        name_cel 'k³êbkowi' 'w³óczki' 'w³óczce' 'we³ny' 'b³êkitnemu' 'b³êkitnej' 'ko³tunowi',
        name_bie 'k³êbek' 'w³óczki' 'w³óczke' 'we³ny' 'b³êkitny' 'b³êkitnej' 'ko³tun',
        name_nar 'k³êbkiem' 'w³óczki' 'w³óczka' 'we³ny' 'b³êkitnym' 'b³êkitnej' 'ko³tunem',
        name_mie 'k³êbku' 'w³óczki' 'w³óczce' 'we³ny' 'b³êkitnym' 'b³êkitnej' 'ko³tunie',

        desc_dop "k³êbka w³óczki",
        desc_cel "k³êbkowi w³óczki",
        desc_bie "k³êbek w³óczki",
        desc_nar "k³êbkiem w³óczki",
        desc_mie "k³êbku w³óczki",

        describe [;
            if (white_kitten.state ~= WOOL_STATE &&
                black_kitten.state ~= WOOL_STATE)
                "^Pod nogami le¿y zapomniany k³êbek w³óczki.";
            rtrue;
        ],

        description [;
            if (self has general)
                "Co za okropny ko³tun! Pomy¶leæ tylko ile czasu zajê³o ci zwijanie w³óczki.
                Wszystko posz³o na marne!";
            "Starannie zwiniêty k³êbek b³êkitnej w³óczki.";
        ],

        before [;
            Untangle:
                give self ~general;
                "Tak szybko jak tylko potrafisz, zwijasz na nowo k³êbek b³êkitnej w³óczki.";
        ],

        after [;
            Take:
                if (white_kitten.state == WOOL_STATE)
                    white_kitten.state = CHAIR_STATE;
                if (black_kitten.state == WOOL_STATE)
                    black_kitten.state = CHAIR_STATE;
        ];


Object  chess_pieces "figury szachowe" Drawing_Room
 has    scenery
 with   parse_name [ w colour n;
            w = NextWord();
            if (w == 'bia³y' or 'bia³a' or 'bia³a' or 'bia³ego' or 'czerwony' or 'czerwona' or 'czerwon±' or 'czerwonego') {
                n ++;
                colour = w;
                w = NextWord();
            }
            if (w == 'pion' or 'piona' or 'wieza' or 'wieze' or 'zamek' ||
                w == 'kon' or 'konia' or 'rycerz' or 'rycerza' or 'goniec' or 'gonca' ||
                w == 'krol' or 'krola' || (w == 'krolowa' &&
                (colour == 'bialy' || rug hasnt general))) return n + 1;
            return 0;
        ],

        before [;
            "Niestety, to jedna z tych zagubionych figur, których nie mo¿esz znale¼æ. Wszystko przez te niegrzeczne kociaki!";
        ];

Object  window "okno" Drawing_Room
 has    scenery

 with   name 'okno',
        name_dop 'okna',
        name_cel'oknu',
        name_bie 'okno',
        name_nar 'oknem',
        name_mie 'oknie',

        desc_dop "okna",
        desc_cel "oknu",
        desc_bie "okno",
        desc_nar "oknem",
        desc_mie "oknie",

        description "Na zewn±trz jest mro¼no, pada ¶nieg i cieszysz siê, ¿e jeste¶ w ciep³ym przytulnym wnêtrzu.",

        before [;
            Open: "Chyba nie chcesz siê przeziêbiæ, prawda? Lepiej zostawiæ okno zamkniête.";
            Search: <<Examine self>>;
        ];

Class   Kitten
 has    animate pluralname
        ! z ustawionym atrybutem general je¶li zosta³ w danej turze wy¶wietlony jego opis

 with   parse_name [ w ok n;
            do {
                ok = 0;
                w = NextWord();

                ! procedura parse_name musi sprawdziæ ca³± deklinacjê
                if (
                    ! wszystkie potencjalne formy liczby mnogiej...
                    w == 'kotki' or 'koty' or 'kociaki'         ! mianownik
                        or 'kotków' or 'kotów' or 'kociaków'    ! dope³niacz
                        or 'kotkom' or 'kotom' or 'kociakom'    ! celownik
                        or 'kotki' or 'koty' or 'kociaki'       ! biernik
                        or 'kotkami' or 'kotami' or 'kociakami' ! narzêdnik
                        or 'kotkach' or 'kotach' or 'kociakach' ! miejscownik
                ) {
                    ok = 1; n++; parser_action=##PluralFound;
                }

                if (
                    ! wszystkie potencjalne formy liczby pojedynczej...
                    w == 'kotek' or 'kot' or 'kociak'           ! mianownik
                        or 'kotka' or 'kota' or 'kociaka'       ! dope³niacz
                        or 'kotkowi' or 'kotu' or 'kociakowi'   ! celownik
                        or 'kotka' or 'kota' or 'kociaka'       ! biernik
                        or 'kotkiem' or 'kotem' or 'kociakiem'  ! narzêdnik
                        or 'kotku' or 'kocie' or 'kociaku'      ! miejscownik

                    ! ...oraz dodatkowo sprawdzenie deklinacji nazw dla ka¿dego obiektu nale¿±cego
                    ! do zdefiniowanej tutaj klasy.
                    || w == ((self.&name)-->0)
                    || w == ((self.&name_dop)-->0)
                    || w == ((self.&name_cel)-->0)
                    || w == ((self.&name_bie)-->0)
                    || w == ((self.&name_nar)-->0)
                    || w == ((self.&name_mie)-->0)

                    ) {
                    ok = 1; n++;
                }
            } until (ok == 0);
            return n;
        ],


        state CHAIR_STATE,

        describe [ i;
            switch (self.state) {
                QUEEN_STATE:
                    "^", (Cname) self, " bawi siê czerwon± królow±.";
                WOOL_STATE:
                    "^", (Cname) self, " bawi siê k³êbkiem w³óczki.";
                CHAIR_STATE:
                    if (self has general) rtrue;
                    if ((self.other_kitten).state == 3) {
                        i = self.other_kitten;
                        give i general;
                        "^Dwa ma³e kociaki, bia³y i czarny, bawi± siê ze sob± przy fotelu.";
                }
                "^", (Cname) self, " bawi siê przy fotelu.";
             default: rtrue;
            }
        ],

        description [;
            print_ret(Cname) self, " jest twoim ulubieñcem! Jest taki milutki i o wiele ³adniejszy od tego niegrzecznego ",
            (dop) self.other_kitten, ".";
        ],

        life [;
            Ask,Answer,Order:
                print_ret (Cname) self, " porusza kilka razy w±sami i patrzy na ciebie swoim
                    inteligentnym spojrzeniem. Nie masz najmniejszej w±tpliwo¶ci, ¿e
                    rozumie ka¿de Twoje s³owo.";
            Kiss:
                "Dajesz ", (cel) self, " buziaka w mokry nosek.";
            Attack: "Nigdy nie zrobi³aby¶ czego¶ tak okrutnego takiemu ma³emu bezbronnemu zwierzaczkowi!";
            Show:
                print_ret (Cname) self, " wbija pazurki w ", (bie) noun, ".";
            Give,ThrowAt:
                if (noun ~= red_queen or worsted) {
                    if (action == ##ThrowAt) {
                        move noun to Drawing_Room;
                        print "Rzucasz ", (bie) noun, " na pod³ogê, lecz ", (the) self;
                    }
                    else print (Cname) self;
                    " przygl±da siê siê ", (cel) noun, " nie rozumiej±c o co chodzi.";
                }
                print "Gdy tylko wypuszczasz z d³oni ", (bie) noun, ", ", (name) self, " natychmiast";
                if (self in player) print " wyrywa ci siê z r±k i";
                move noun to Drawing_Room;
                move self to Drawing_Room;
                print " rusza za ", (nar) noun, " w po¶cig";

                if (noun == worsted) {
                    give worsted general;
                    self.state = WOOL_STATE;
                    print ". Chwilê pó¼niej starannie zwiniêta w³óczka zmienia siê w zapl±tany ko³tun";
                }
                else self.state = QUEEN_STATE;
                ".";
        ],

        before [;
            Take:
                if (self.other_kitten in player) "Nie dasz rady utrzymaæ na raz dwóch kociaków!";
                self.state = HELD_STATE;
                move self to player;
                "Ostro¿nie podnosisz ", (bie) self, ". Jaki on uroczy!";
            Touch, Rub: print_ret (Cname) self, " ociera siê o twoje nogi pomrukuj±c z zadowoleniem.";
        ],

        after [;
            Drop:
                self.state = CHAIR_STATE;
                move self to Drawing_Room;
                print_ret (Cname) self, " wyrywa ci sie z r±k i ucieka.";
            Transfer,PutOn,Insert:
                self.state = CHAIR_STATE;
                print "Niezadowolony ", (name) self, " natychmiast zeskakuje z ", (dop) parent(self);
                move self to Drawing_Room;
                " z gracj± l±duj±c na pod³odze.";
        ],

        daemon [ i;
            give self ~general;
            self.this_kittens_turn = 1 - self.this_kittens_turn;
            if (self.this_kittens_turn == false || random(3) == 2) rtrue;
            new_line;
            print (Cname) self;
            switch (self.state) {
                HELD_STATE:
                    switch(random(5)) {
                        1: " miauczy ¿a³o¶nie.";
                        2: " cicho mruczy.";
                        3: " pomrukuje z zadowoleniem.";
                        4: " ociera siê o ciebie.";
                        5: move self to Drawing_Room;
                        self.state = CHAIR_STATE;
                        " wyrywa ci siê z r±k i ucieka.";
                        }
                QUEEN_STATE:
                    switch (random(5)) {
                        1: " zaczepia czerwon± królow± ostrym pazurkiem.";
                        2: " przestaje siê bawiæ i przysiada grzecznie udaj±c niewinne koci±tko bez jakichkolwiek
                            niecnych zamiarów.";
                        3: " wyrzuca czerwon± królow± daleko od siebie i zaczyna j± goniæ.";
                        4: " zatrzymuje siê nagle i zaczyna czy¶ciæ futerko.";
                        5: " atakuje czerwon± królow± ostrymi z±bkami i potrz±saj±c na lewo i
                            prawo sprawdza czy na pewno jest martwa.";
                        }
                WOOL_STATE:
                    give worsted general;
                        switch (random(5)) {
                            1: " drapie k³êbek w³óczki swoimi ostrymi pazurkami.";
                            2: " toczy k³êbek w³óczki po pod³odze i próbuje go dogoniæ.";
                            3: " dzielnie mocuje siê z k³êbkiem w³óczki.";
                            4: " wskakuje na k³êbek w³óczki i od razu zapl±tuje siê w g±szczu nici.";
                            5: " przerywa na chwilê zabawê k³êbkiem, aby podrapaæ siê za uchem.";
                        }
                CHAIR_STATE:
                    if ((self.other_kitten).state == CHAIR_STATE && random(2) == 1) {
                        i = random(5);
                        switch (i) {
                            1: print " z zapa³em goni ";
                            2: print " rzuca siê na ";
                            3: print " czy¶ci futerko ";
                            4: print " ¶ciga ";
                            5: print " drapie ";
                        }
                        print (dop) self.other_kitten;
                        switch (i) {
                            1,3: ".";
                            2: " i razem weso³o turlaj± siê po pod³odze.";
                            4: " wokó³ fotela.";
                            5: " ostrymi pazurkami.";
                        }
                    }
                switch (random(5)) {
                    1: " usi³uje schwytaæ drobinkê kurzu.";
                    2: " turla siê po pod³odze.";
                    3: " przysiada i czy¶ci swój ogonek.";
                    4: " ociera siê o fotel pomrukuj±c z zadowoleniem.";
                    5: " biega w kó³ko próbuj± z³apaæ swój ogonek.";
                }
            }
        ];

Kitten  white_kitten "bia³y kotek" Drawing_Room

 with   name     'bia³y',
        name_dop 'bia³ego',
        name_cel 'bia³emu',
        name_bie 'bia³ego',
        name_nar 'bia³ym',
        name_mie 'bia³ym',

        desc_dop "bia³ego kotka",
        desc_cel "bia³emu kotkowi",
        desc_bie "bia³ego kotka",
        desc_nar "bia³ym kotkiem",
        desc_mie "bia³ym kotku",

        this_kittens_turn false,
        other_kitten black_kitten;

Kitten  black_kitten "czarny kotek" Drawing_Room

 with   name     'czarny',
        name_dop 'czarnego',
        name_cel 'czarnemu',
        name_bie 'czarnego',
        name_nar 'czarnym',
        name_mie 'czarnym',

        desc_dop "czarnego kotka",
        desc_cel "czarnemu kotkowi",
        desc_bie "czarnego kotka",
        desc_nar "czarnym kotkiem",
        desc_mie "czarnym kotku",

        this_kittens_turn true,
        other_kitten white_kitten;
